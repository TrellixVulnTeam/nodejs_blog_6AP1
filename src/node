
"devDependencies": {   các phần cài đặt
    "express": "^4.17.1",  thư viện hộ trợ node js
    "nodemon": "^2.0.12" để chạy tự động file đầu nodejs , để debug nodejs

    "node-sass": "^6.0.1"  Để chuyển chuyển file css được sinh ra phải scss vào thư mục nào trong nodejs
    "morgan": "^1.10.0",  Để quan sát được các request từ cliel lên node sever

    "express-handlebars": "^5.3.3",  template engie hadlebars của express
    "mongoose": "^5.13.6",   thư viện kếT nối mogodb và nodejs

    "mongoose-slug-generator": "^1.0.4", de phuc vu lam slug khi ta them khoa hoc moi
}





1..(req,res)
    req: viếT tắt của request ( yêu cầu)
        + Chứa các thông tin được gửi lên sever
    
    res: response  (phản hồi)
2... query parameters  (thường sử dụng với phương thức get)

    Với phương thức get ví dụ đường dẫn 
    http://localhost:3000/?q=f8%lap%trinh&author=duylinh&name=linh

    Trước đường dẫn là ?
    Sau đó quy ước với key = value ngăn nhau bằng dấu &
    Dấu cách tính bằng %20
    dung morgan để dubug
    voi get dung req.query

3.. với method post thì sử dụng middleware đã 
tích hợp sẵn trong express
goi la req.body


4.MCV
        với file site.js để thực hiện nhưng trang mà
        không năm ở tài nguyên cụ thể hay nói cách khác
        là chỉ có 1 trang ( home, contact, search)
        copy lại trang news.js và sửa tên


        trong index.js
        1 route(app) ---> chạy từ function trong const route = require("./routers");
        2 ===> siteRouter ---> chạy từ file site.js trong thư mục routers
        trong file site.js sử dựng phương thức const router = express.Router();
        được chạy sẵn trong express để đình hướng tuyến đường cho site dù còn nhiều 
        trang nhỏ bên trong
        3-----> chạy tiếp siteController trong controllers
        4====> trả về view 
5. phần kết nối và cài đặt Mogodb
    +Cài xong Mogodb chú ý copy cái mã cài đặt
    +Phải có bên thứ 3 để conect là mongoose (https://github.com/Automattic/mongoose) 
      + const Schema = mongoose.Schema; đây là lược đồ trong mongoose    


6. Lấy dự liệu từ db trả về view
   +Chú ý là làm theo thư viện https://handlebarsjs.com/
   + Viết 1 fucntion trong unil xử lý riêng vì tính bảo mật mongoose không cho truy xuất trực tiếp


7. Làm trang chi tiết khoá học
  +  tạo slug cho đường dẫn courses (tạo thêm trường slug trong db)
       +b1: tạo file courese.js trong routers
       +b2: tạo file CourseController.js trong controllers
       +b3: Đẩy vào index.js trong routers
  + Xử lý login tìm chuỗi slug trên url để truy vấn vào db lấy ra thông tin trang chi tiết
      + dựa vào thư viện mongoose 
      +b1: lấy param trên thanh url 
        đã học ở bài get ta dùng phuong thức req.params.slug (
            với phương thức post là req.body...)
        )  
       + dùng thằng req.params.slug chọc vào db bằng mongoose
        vào trang https://mongoosejs.com/docs/api.html#model_Model.findOnemongoose.js 
        tìm mục queries 
        +/// chú ý hamgf findOne là 1 promise lên để hứng kết quả ta sử
        // dụng then(function callback).catch(bắt lỗi)
8. taọ mới 1 khoá học
 +chú ý thêm trường vào trong file model (ví dụ video.id )
 Nếu không thêm trường định nghĩa đó thì db không hiểu để thêm vào dc
 + khi thêm 2 khoá học trùng nhau thì ta cần thêm định nghĩa nữa sử dụng
 thuộc tính unique:true (tự thêm chuổi ngẫu nhiên để 2 bị trùng)
 + sử dụng mongoosejs để thực hiệN phuong thức save vào db
 + Sử dụng thư viện express để chuyển hướng trang 